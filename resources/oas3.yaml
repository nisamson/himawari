openapi: 3.0.0
info:
  title: Himawari API
  description: API for interacting with the Himawari Contest Backend API
  version: 0.1.0
paths:
  /api/register:
    post:
      summary: Creates a new user with the given information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      security: [ ]
      responses:
        '201':
          description: Created
          headers:
            Set-Cookie:
              schema:
                type: string
        '409':
          description: A user already exists with that username or email
        default:
          description: Unspecified error
  /api/login:
    post:
      summary: Logs in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      security: [ ]
      responses:
        '200':
          description: Successfuly authenticated. Session ID will be returned as a JWT.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    format: JWT
                    description: JSON web token for authentication.
        '401':
          description: User or password was incorrect.
        default:
          description: Unspecified error
  /api/contest:
    post:
      security:
        - bearerAuth: [ ]
      responses:
        '201':
          description: A contest is created with the given name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContestInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: Unspecified error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
    get:
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Returns info about contests pertinent to this user (either that they created or are judging).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContestInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRef:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    LoginUser:
      allOf:
        - $ref: '#/components/schemas/UserRef'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
              format: password
              minLength: 4
              maxLength: 128
            captchaToken:
              type: string
    CreateUser:
      allOf:
        - $ref: '#/components/schemas/LoginUser'
        - type: object
          properties:
            email:
              type: string
              format: email
          required:
            - email
    ContestInfo:
      type: object
      properties:
        id:
          type: number
          format: int
        name:
          type: string
          minLength: 1
        owner:
          type: string
          description: Username of the contest creator
        created:
          type: string
          format: datetime
          description: Creation time of the contest
      required:
        - id
        - name
        - owner
        - created
    CreateEntry:
      type: object

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid.